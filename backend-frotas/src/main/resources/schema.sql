-- Dropar tabelas em ordem inversa de dependência (opcional, para garantir recriação limpa)
DROP TABLE IF EXISTS manutencoes;
DROP TABLE IF EXISTS abastecimentos;
DROP TABLE IF EXISTS ocorrencias;
DROP TABLE IF EXISTS agendamentos;
DROP TABLE IF EXISTS veiculos;
DROP TABLE IF EXISTS usuarios;

-- Criar a tabela USUARIOS
CREATE TABLE usuarios (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome_completo VARCHAR(100) NOT NULL,
    cpf VARCHAR(11) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha_hash VARCHAR(255) NOT NULL,
    perfil VARCHAR(20) NOT NULL,
    telefone VARCHAR(20),
    cep VARCHAR(9),
    rua VARCHAR(100),
    numero VARCHAR(10),
    bairro VARCHAR(100),
    cidade VARCHAR(100),
    estado VARCHAR(2),
    complemento VARCHAR(100),
    cnh VARCHAR(15) UNIQUE,
    validade_cnh DATE,
    ativo BOOLEAN NOT NULL DEFAULT TRUE,
    PRIMARY KEY (id)
);

-- Criar a tabela VEICULOS
CREATE TABLE veiculos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    placa VARCHAR(7) NOT NULL UNIQUE,
    modelo VARCHAR(50) NOT NULL,
    tipo VARCHAR(20) NOT NULL,
    ano INT NOT NULL,
    quilometragem_atual DECIMAL(10,2) NOT NULL,
    status VARCHAR(20) NOT NULL,
    ativo BOOLEAN NOT NULL DEFAULT TRUE,
    PRIMARY KEY (id)
);

-- Criar a tabela AGENDAMENTOS
CREATE TABLE agendamentos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    veiculo_id BIGINT NOT NULL,
    motorista_id BIGINT NOT NULL,
    data_hora_saida TIMESTAMP NOT NULL,
    data_hora_retorno TIMESTAMP,
    destino VARCHAR(100) NOT NULL,
    justificativa VARCHAR(255) NOT NULL,
    quilometragem_saida DECIMAL(10,2),
    quilometragem_final DECIMAL(10,2),
    observacoes_saida VARCHAR(255),
    observacoes_final VARCHAR(255),
    status VARCHAR(20) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (veiculo_id) REFERENCES veiculos (id),
    FOREIGN KEY (motorista_id) REFERENCES usuarios (id)
);

-- Criar a tabela OCORRENCIAS
CREATE TABLE ocorrencias (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    veiculo_id BIGINT NOT NULL,
    motorista_id BIGINT NOT NULL,
    data_registro TIMESTAMP NOT NULL,
    descricao_problema VARCHAR(500) NOT NULL,
    resolvida BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (id),
    FOREIGN KEY (veiculo_id) REFERENCES veiculos (id),
    FOREIGN KEY (motorista_id) REFERENCES usuarios (id)
);

-- Criar a tabela ABASTECIMENTOS
CREATE TABLE abastecimentos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    veiculo_id BIGINT NOT NULL,
    motorista_id BIGINT NOT NULL,
    data_abastecimento TIMESTAMP NOT NULL,
    tipo_combustivel VARCHAR(20) NOT NULL,
    valor DECIMAL(10,2) NOT NULL,
    quilometragem_abastecimento DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (veiculo_id) REFERENCES veiculos (id),
    FOREIGN KEY (motorista_id) REFERENCES usuarios (id)
);

-- Criar a tabela MANUTENCOES
CREATE TABLE manutencoes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    veiculo_id BIGINT NOT NULL,
    data_manutencao TIMESTAMP NOT NULL,
    tipo VARCHAR(20) NOT NULL,
    descricao VARCHAR(500) NOT NULL,
    valor DECIMAL(10,2) NOT NULL,
    quilometragem_manutencao DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (veiculo_id) REFERENCES veiculos (id)
);
